// Mocks generated by Mockito 5.4.0 from annotations
// in peppermint_sdk/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i7;
import 'dart:typed_data' as _i8;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i5;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/data_source/chat_local_data_source.dart'
    as _i3;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/models/chat_message_response.dart'
    as _i10;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/models/chatbot_model.dart'
    as _i11;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/repo/chatbot_repo.dart'
    as _i9;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/usecases/create_conversation_usecase.dart'
    as _i12;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/usecases/get_messages_usecase.dart'
    as _i13;
import 'package:peppermint_sdk/src/peppermint_functionalities/chatbot/usecases/send_message_usecase.dart'
    as _i14;
import 'package:peppermint_sdk/src/resource.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatLocalDataSource_2 extends _i1.SmartFake
    implements _i3.ChatLocalDataSource {
  _FakeChatLocalDataSource_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResource_3<T1> extends _i1.SmartFake implements _i4.Resource<T1> {
  _FakeResource_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSecureStorage_4 extends _i1.SmartFake
    implements _i5.FlutterSecureStorage {
  _FakeFlutterSecureStorage_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_5 extends _i1.SmartFake implements _i5.IOSOptions {
  _FakeIOSOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_6 extends _i1.SmartFake
    implements _i5.AndroidOptions {
  _FakeAndroidOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_7 extends _i1.SmartFake implements _i5.LinuxOptions {
  _FakeLinuxOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_8 extends _i1.SmartFake
    implements _i5.WindowsOptions {
  _FakeWindowsOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_9 extends _i1.SmartFake implements _i5.WebOptions {
  _FakeWebOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_10 extends _i1.SmartFake implements _i5.MacOsOptions {
  _FakeMacOsOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i8.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i8.Uint8List>.value(_i8.Uint8List(0)),
      ) as _i6.Future<_i8.Uint8List>);
  @override
  _i6.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i2.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatbotRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatbotRepo extends _i1.Mock implements _i9.ChatbotRepo {
  MockChatbotRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ChatLocalDataSource get dataSource => (super.noSuchMethod(
        Invocation.getter(#dataSource),
        returnValue: _FakeChatLocalDataSource_2(
          this,
          Invocation.getter(#dataSource),
        ),
      ) as _i3.ChatLocalDataSource);
  @override
  String get sendChatUrl => (super.noSuchMethod(
        Invocation.getter(#sendChatUrl),
        returnValue: '',
      ) as String);
  @override
  String get messagesUrl => (super.noSuchMethod(
        Invocation.getter(#messagesUrl),
        returnValue: '',
      ) as String);
  @override
  String get noConversation => (super.noSuchMethod(
        Invocation.getter(#noConversation),
        returnValue: '',
      ) as String);
  @override
  _i6.Future<_i4.Resource<_i10.ChatMessage>> sendMessage(String? prompt) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [prompt],
        ),
        returnValue: _i6.Future<_i4.Resource<_i10.ChatMessage>>.value(
            _FakeResource_3<_i10.ChatMessage>(
          this,
          Invocation.method(
            #sendMessage,
            [prompt],
          ),
        )),
      ) as _i6.Future<_i4.Resource<_i10.ChatMessage>>);
  @override
  _i6.Future<_i4.Resource<_i10.ChatMessageResponse>> getMessages() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [],
        ),
        returnValue: _i6.Future<_i4.Resource<_i10.ChatMessageResponse>>.value(
            _FakeResource_3<_i10.ChatMessageResponse>(
          this,
          Invocation.method(
            #getMessages,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Resource<_i10.ChatMessageResponse>>);
  @override
  _i6.Future<_i4.Resource<_i11.ChatbotModel>> createConversation() =>
      (super.noSuchMethod(
        Invocation.method(
          #createConversation,
          [],
        ),
        returnValue: _i6.Future<_i4.Resource<_i11.ChatbotModel>>.value(
            _FakeResource_3<_i11.ChatbotModel>(
          this,
          Invocation.method(
            #createConversation,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Resource<_i11.ChatbotModel>>);
  @override
  _i6.Future<String?> getSavedConversationId() => (super.noSuchMethod(
        Invocation.method(
          #getSavedConversationId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
  @override
  _i6.Future<void> saveConversationId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #saveConversationId,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ChatLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatLocalDataSource extends _i1.Mock
    implements _i3.ChatLocalDataSource {
  MockChatLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FlutterSecureStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFlutterSecureStorage_4(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i5.FlutterSecureStorage);
  @override
  _i6.Future<void> appendMessageHistory(_i10.ChatMessage? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendMessageHistory,
          [data],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<_i10.ChatMessage>> getMessageHistory() => (super.noSuchMethod(
        Invocation.method(
          #getMessageHistory,
          [],
        ),
        returnValue:
            _i6.Future<List<_i10.ChatMessage>>.value(<_i10.ChatMessage>[]),
      ) as _i6.Future<List<_i10.ChatMessage>>);
  @override
  _i6.Future<void> setConversationId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #setConversationId,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<String?> getConversationId() => (super.noSuchMethod(
        Invocation.method(
          #getConversationId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
}

/// A class which mocks [CreateConversationUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateConversationUsecase extends _i1.Mock
    implements _i12.CreateConversationUsecase {
  MockCreateConversationUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Resource<_i10.ChatMessageResponse>> invoke() =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i6.Future<_i4.Resource<_i10.ChatMessageResponse>>.value(
            _FakeResource_3<_i10.ChatMessageResponse>(
          this,
          Invocation.method(
            #invoke,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Resource<_i10.ChatMessageResponse>>);
}

/// A class which mocks [GetMessagesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMessagesUsecase extends _i1.Mock
    implements _i13.GetMessagesUsecase {
  MockGetMessagesUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Resource<_i10.ChatMessageResponse>> invoke() =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i6.Future<_i4.Resource<_i10.ChatMessageResponse>>.value(
            _FakeResource_3<_i10.ChatMessageResponse>(
          this,
          Invocation.method(
            #invoke,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Resource<_i10.ChatMessageResponse>>);
}

/// A class which mocks [SendMessageUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendMessageUsecase extends _i1.Mock
    implements _i14.SendMessageUsecase {
  MockSendMessageUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Resource<_i10.ChatMessage>> invoke(String? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [message],
        ),
        returnValue: _i6.Future<_i4.Resource<_i10.ChatMessage>>.value(
            _FakeResource_3<_i10.ChatMessage>(
          this,
          Invocation.method(
            #invoke,
            [message],
          ),
        )),
      ) as _i6.Future<_i4.Resource<_i10.ChatMessage>>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i5.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_5(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i5.IOSOptions);
  @override
  _i5.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_6(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i5.AndroidOptions);
  @override
  _i5.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_7(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i5.LinuxOptions);
  @override
  _i5.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_8(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i5.WindowsOptions);
  @override
  _i5.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_9(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i5.WebOptions);
  @override
  _i5.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_10(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i5.MacOsOptions);
  @override
  _i6.Future<void> write({
    required String? key,
    required String? value,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<String?> read({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
  @override
  _i6.Future<bool> containsKey({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<void> delete({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<Map<String, String>> readAll({
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i6.Future<Map<String, String>>);
  @override
  _i6.Future<void> deleteAll({
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
